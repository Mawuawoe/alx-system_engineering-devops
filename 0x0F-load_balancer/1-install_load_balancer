#!/usr/bin/env bash
# instalI and configure HAproxy on a server to balance load between wb1 and wb2

# Define server IPs
WEB01_IP="54.160.125.157"
WEB02_IP="52.207.208.124"

# Function to install a package if not already installed
install() {
    command -v "$1" &> /dev/null

    if [ $? -ne 0 ]; then
        echo -e "Installing: $1\n"
        sudo apt-get update -y -qq && \
            sudo apt-get install -y "$1" -qq
        echo -e "\n"
    else
        echo -e "$1 is already installed.\n"
    fi
}

echo -e "Updating and doing some minor checks...\n"

# Install HAProxy
install haproxy

echo -e "\nSetting up HAProxy configuration.\n"

# Backup default HAProxy config file
sudo cp /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy.cfg.bak

# Create new HAProxy configuration
server_config="
defaults
  mode http
  timeout client 15s
  timeout connect 10s
  timeout server 15s
  timeout http-request 10s

frontend http_front
    bind *:80
    default_backend http_back

backend http_back
    balance roundrobin
    server web01 $WEB01_IP:80 check
    server web02 $WEB02_IP:80 check
"

# Write the new configuration to haproxy.cfg
echo "$server_config" | sudo tee /etc/haproxy/haproxy.cfg > /dev/null

# Enable HAProxy to be managed by the init script
echo "ENABLED=1" | sudo tee /etc/default/haproxy > /dev/null

echo "Configured HAProxy with roundrobin load balancing on web-01 and web-02."

# Start or restart HAProxy service
if [ "$(pgrep -c haproxy)" -le 0 ]; then
    sudo service haproxy start
else
    sudo service haproxy restart
fi

echo "HAProxy service started/restarted successfully."
